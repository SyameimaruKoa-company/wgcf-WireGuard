name: WGCF Create with QR Code

on:
  workflow_dispatch:
    inputs:
      terminal_name:
        description: "識別用の名前を入力 (リリース名/タグ用)"
        required: true # これは必須じゃ
      asset_name_suffix:
        description: "ファイル名を入力 (空欄OK)"
        required: false # これは必須ではないじゃ

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リリースを作成し、ファイルをアップロードするために必要じゃ

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v4

      - name: Goを設定する
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: wgcf をクローンしてビルドする
        run: |
          git clone https://github.com/ViRb3/wgcf.git
          cd wgcf
          go build -o wgcf
          sudo mv wgcf /usr/local/bin/

      - name: WGCFに登録する（非対話型）
        run: |
          yes | wgcf register

      - name: WireGuardプロファイルを生成する
        run: |
          wgcf generate

      - name: AdGuard DNSプロファイルを作成する
        run: |
          cp wgcf-profile.conf wgcf-profile-adguard.conf
          # Cloudflare DNSをAdGuard DNSに置換するのじゃ
          sed -i 's/1.1.1.1/94.140.14.14/g' wgcf-profile-adguard.conf
          sed -i 's/1.0.0.1/94.140.15.15/g' wgcf-profile-adguard.conf
          sed -i 's/2606:4700:4700::1111/2a10:50c0::ad1:ff/g' wgcf-profile-adguard.conf
          sed -i 's/2606:4700:4700::1001/2a10:50c0::ad2:ff/g' wgcf-profile-adguard.conf

      - name: Google DNSプロファイルを作成する (DNS64込み)
        run: |
          cp wgcf-profile.conf wgcf-profile-google.conf
          # 'DNS = 'で始まる行を丸ごと、指定されたGoogle DNSアドレス全てに置き換えるのじゃ
          sed -i '/^DNS = /c\DNS = 8.8.8.8, 8.8.4.4, 2001:4860:4860::8888, 2001:4860:4860::8844, 2001:4860:4860::6464, 2001:4860:4860::64' wgcf-profile-google.conf

      - name: 実行日時を取得する
        id: get_datetime
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV

      - name: タグとリリース名用に端末名をサニタイズする
        run: |
          SANITIZED_NAME=$(echo "${{ github.event.inputs.terminal_name }}" | sed 's/[[:space:]]/-/g')
          echo "SANITIZED_TERMINAL_NAME=$SANITIZED_NAME" >> $GITHUB_ENV

      - name: アセットファイル名用の接尾辞を決定する
        run: |
          ASSET_SUFFIX_INPUT="${{ github.event.inputs.asset_name_suffix }}"
          if [ -n "$ASSET_SUFFIX_INPUT" ]; then
            FINAL_SUFFIX="$ASSET_SUFFIX_INPUT"
          else
            FINAL_SUFFIX="${{ env.SANITIZED_TERMINAL_NAME }}"
          fi
          echo "FINAL_ASSET_SUFFIX=$FINAL_SUFFIX" >> $GITHUB_ENV
        shell: bash

      # --- ここからが変更点じゃ ---

      - name: qrencode をインストールする
        run: sudo apt-get update && sudo apt-get install -y qrencode

      - name: QRコードを生成し、リリース本文を作成する
        id: prepare_release_body
        run: |
          BODY_CONTENT="プロファイルごとのQRコードじゃぞ。クリックして展開するのじゃ。"

          # CloudflareプロファイルのQRコード
          CF_QR_BASE64=$(qrencode -t png -o - < wgcf-profile.conf | base64 -w 0)
          BODY_CONTENT="${BODY_CONTENT}
          <details>
          <summary>WARP-CloudFlare-${{ env.FINAL_ASSET_SUFFIX }}.conf QRコード</summary>
          <br>
          ![QR Code](data:image/png;base64,${CF_QR_BASE64})
          </details>
          "

          # AdGuardプロファイルのQRコード
          AG_QR_BASE64=$(qrencode -t png -o - < wgcf-profile-adguard.conf | base64 -w 0)
          BODY_CONTENT="${BODY_CONTENT}
          <details>
          <summary>WARP-AdGuard-${{ env.FINAL_ASSET_SUFFIX }}.conf QRコード</summary>
          <br>
          ![QR Code](data:image/png;base64,${AG_QR_BASE64})
          </details>
          "

          # GoogleプロファイルのQRコード
          GO_QR_BASE64=$(qrencode -t png -o - < wgcf-profile-google.conf | base64 -w 0)
          BODY_CONTENT="${BODY_CONTENT}
          <details>
          <summary>WARP-Google-${{ env.FINAL_ASSET_SUFFIX }}.conf QRコード</summary>
          <br>
          ![QR Code](data:image/png;base64,${GO_QR_BASE64})
          </details>
          "

          # GITHUB_ENVに複数行の文字列を渡すためのテクニックじゃ
          echo 'RELEASE_BODY<<EOF' >> $GITHUB_ENV
          echo "${BODY_CONTENT}" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        shell: bash

      - name: リリースを作成
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SANITIZED_TERMINAL_NAME }}-${{ env.CURRENT_DATETIME }}
          release_name: ${{ env.CURRENT_DATETIME }}-${{ env.SANITIZED_TERMINAL_NAME }}
          body: ${{ env.RELEASE_BODY }} # ここで本文にQRコードを埋め込むのじゃ
          draft: true
          prerelease: false

      # --- ここまでが変更点じゃ ---

      - name: Cloudflare DNSプロファイルアセットをアップロードする
        id: upload-cloudflare-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile.conf
          asset_name: WARP-CloudFlare-${{ env.FINAL_ASSET_SUFFIX }}.conf
          asset_content_type: text/plain

      - name: AdGuard DNSプロファイルアセットをアップロード
        id: upload-adguard-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile-adguard.conf
          asset_name: WARP-AdGuard-${{ env.FINAL_ASSET_SUFFIX }}.conf
          asset_content_type: text/plain

      - name: Google DNSプロファイルアセットをアップロード
        id: upload-google-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile-google.conf
          asset_name: WARP-Google-${{ env.FINAL_ASSET_SUFFIX }}.conf
          asset_content_type: text/plain

      - name: Check if Discord Webhook Secret is Set
        id: check_secret
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            echo "DISCORD_SECRET_SET=true" >> $GITHUB_ENV
          else
            echo "DISCORD_SECRET_SET=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Discordに通知を送る
        if: env.DISCORD_SECRET_SET == 'true'
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            🎉 WGCFプロファイルの生成とリリースが完了したのじゃ！🎉

            **端末名 (リリース/タグ用):** ${{ github.event.inputs.terminal_name }}
            **ファイル名接尾辞 (アセット用):** ${{ env.FINAL_ASSET_SUFFIX }}
            **実行日時:** ${{ env.CURRENT_DATETIME }}
            **Run番号:** #${{ github.run_number }}

            以下のプロファイルが生成され、リリースに添付されたのじゃ (QRコード付き！):
            - Cloudflare DNS
            - AdGuard DNS
            - Google DNS (DNS64込み)

            **リリースURL:** ${{ steps.create_release.outputs.html_url }}
