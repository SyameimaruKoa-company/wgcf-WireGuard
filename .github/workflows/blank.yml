name: WGCFプロファイルを生成

on:
  workflow_dispatch:
    inputs:
      terminal_name:
        description: "端末の名前を入力するのじゃ (例: MyPhone)"
        required: true
        default: "UnnamedDevice"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リリースを作成し、ファイルをアップロードするために必要じゃ

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v4

      - name: Goを設定する
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: wgcf をクローンしてビルドする
        run: |
          git clone https://github.com/ViRb3/wgcf.git
          cd wgcf
          go build -o wgcf
          sudo mv wgcf /usr/local/bin/

      - name: WGCFに登録する（非対話型）
        run: |
          yes | wgcf register

      - name: WireGuardプロファイルを生成する
        run: |
          wgcf generate

      - name: AdGuard DNSプロファイルを作成する
        run: |
          cp wgcf-profile.conf wgcf-profile-adguard.conf
          # Cloudflare DNSをAdGuard DNSに置換するのじゃ
          sed -i 's/1.1.1.1/94.140.14.14/g' wgcf-profile-adguard.conf
          sed -i 's/1.0.0.1/94.140.15.15/g' wgcf-profile-adguard.conf
          sed -i 's/2606:4700:4700::1111/2a10:50c0::ad1:ff/g' wgcf-profile-adguard.conf
          sed -i 's/2606:4700:4700::1001/2a10:50c0::ad2:ff/g' wgcf-profile-adguard.conf

      - name: タグの端末名をサニタイズする
        run: |
          SANITIZED_NAME=$(echo "${{ github.event.inputs.terminal_name }}" | sed 's/[[:space:]]/-/g')
          echo "SANITIZED_TERMINAL_NAME=$SANITIZED_NAME" >> $GITHUB_ENV

      - name: リリースを作成
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: wgcf-profile-${{ github.run_number }}-${{ github.event.inputs.terminal_name }} # 端末名をタグ名に含めるのじゃ
          release_name: WGCF Profile for ${{ github.event.inputs.terminal_name }} (Run #${{ github.run_number }}) # 端末名をリリース名に表示するのじゃ
          draft: false # ドラフトではなく、すぐに公開するのじゃ
          prerelease: false

      - name: 出力リリースURL
        run: |
          echo "Release URL: ${{ steps.create_release.outputs.html_url }}" # リリースURLをログに出力するのじゃ

      - name: Cloudflare DNSプロファイルアセットをアップロードする
        id: upload-cloudflare-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile.conf
          asset_name: wgcf-profile-cloudflare-${{ github.event.inputs.terminal_name }}.conf # 端末名とDNSサービス名を含めるのじゃ
          asset_content_type: text/plain

      - name: AdGuard DNSプロファイルアセットをアップロード
        id: upload-adguard-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile-adguard.conf
          asset_name: wgcf-profile-adguard-${{ github.event.inputs.terminal_name }}.conf # 端末名とDNSサービス名を含めるのじゃ
          asset_content_type: text/plain

      - name: Discordに通知を送る
        uses: actions-go/discord-webhook@v2 # Discord通知用のアクションじゃ
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }} # Webhook IDをSecretsから取得するのじゃ
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }} # Webhook TokenもSecretsから取得するのじゃ
          # または、webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }} # URL全体を使う場合はこちらじゃ。どちらか一方で良いのじゃ。
          color: 3066993 # メッセージの色じゃ（これは緑色）
          description: "WGCFプロファイルの生成とリリースが完了したのじゃ！" # 通知の本文じゃ
          title: "WGCF Profile Release Complete" # メッセージのタイトルじゃ
          url: ${{ steps.create_release.outputs.html_url }} # リリースURLを添付するのじゃ
          footer_text: |
            端末: ${{ github.event.inputs.terminal_name }} | Run #${{ github.run_number }} # フッターに端末名とRun番号を入れるのじゃ
          timestamp: true # タイムスタンプを入れるのじゃ