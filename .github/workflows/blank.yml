name: WGCF Create

on:
  workflow_dispatch:
    inputs:
      terminal_name:
        description: "端末の名前を入力するのじゃ。ただファイル名になるだけじゃが。"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リリースを作成し、ファイルをアップロードするために必要じゃ

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v4

      - name: Goを設定する
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: wgcf をクローンしてビルドする
        run: |
          git clone https://github.com/ViRb3/wgcf.git
          cd wgcf
          go build -o wgcf
          sudo mv wgcf /usr/local/bin/

      - name: WGCFに登録する（非対話型）
        run: |
          yes | wgcf register

      - name: WireGuardプロファイルを生成する
        run: |
          wgcf generate

      - name: AdGuard DNSプロファイルを作成する
        run: |
          cp wgcf-profile.conf wgcf-profile-adguard.conf
          # Cloudflare DNSをAdGuard DNSに置換するのじゃ
          sed -i 's/1.1.1.1/94.140.14.14/g' wgcf-profile-adguard.conf
          sed -i 's/1.0.0.1/94.140.15.15/g' wgcf-profile-adguard.conf
          sed -i 's/2606:4700:4700::1111/2a10:50c0::ad1:ff/g' wgcf-profile-adguard.conf
          sed -i 's/2606:4700:4700::1001/2a10:50c0::ad2:ff/g' wgcf-profile-adguard.conf

      - name: 今日の日付を取得する
        id: get_date
        run: echo "CURRENT_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV #MMDD形式で日付を取得し、環境変数に設定するのじゃ

      - name: タグの端末名をサニタイズする
        run: |
          SANITIZED_NAME=$(echo "${{ github.event.inputs.terminal_name }}" | sed 's/[[:space:]]/-/g')
          echo "SANITIZED_TERMINAL_NAME=$SANITIZED_NAME" >> $GITHUB_ENV

      # 追加：アセット名用に端末名を切り詰める
      - name: アセット名用に端末名を切り詰める
        run: |
          # サニタイズされた名前を最初の20文字に切り詰めるのじゃ
          TRUNCATED_TERMINAL_NAME=${SANITIZED_TERMINAL_NAME:0:20}
          echo "TRUNCATED_TERMINAL_NAME=$TRUNCATED_TERMINAL_NAME" >> $GITHUB_ENV


      - name: リリースを作成
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: wgcf-profile-${{ env.CURRENT_DATE }}-${{ github.run_number }}-${{ env.SANITIZED_TERMINAL_NAME }} # タグは必須なので残すが、サニタイズ名を使うのじゃ
          release_name: ${{ env.CURRENT_DATE }}-${{ env.SANITIZED_TERMINAL_NAME }} (Run #${{ github.run_number }}) # リリース名に日付、端末名、ラン番号を入れるのじゃ
          draft: true # ドラフト
          prerelease: false

      - name: Cloudflare DNSプロファイルアセットをアップロードする
        id: upload-cloudflare-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile.conf
          asset_name: WARP-CloudFlare-${{ env.TRUNCATED_TERMINAL_NAME }}.conf # 切り詰めた端末名を使うのじゃ
          asset_content_type: text/plain

      - name: AdGuard DNSプロファイルアセットをアップロード
        id: upload-adguard-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wgcf-profile-adguard.conf
          asset_name: WARP-AdGuard-${{ env.TRUNCATED_TERMINAL_NAME }}.conf # こちらも切り詰めた端末名を使うのじゃ
          asset_content_type: text/plain

      - name: Discordに通知を送る
        uses: tsickert/discord-webhook@v7.0.0 # これで間違いなかろう
        with:
          # GitHub Marketplaceのドキュメント通り、必須入力は 'webhook-url' じゃ
          # Secretsに登録したWebhook URL全体を指定するのじゃぞ！
          # Secretsの名前は、おぬしが登録したものに合わせるのじゃ。
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }} # ここにWebhook URL全体が入ったSecretを指定

          # メッセージ本文は 'content' という入力名じゃ
          content: | # 複数行で書くならパイプ記号(|)を使うのが便利じゃ
            🎉 WGCFプロファイルの生成とリリースが完了したのじゃ！🎉

            **端末名:** ${{ github.event.inputs.terminal_name }}
            **Run番号:** #${{ github.run_number }}

            **リリースURL:** ${{ steps.create_release.outputs.html_url }}

            おぬし、確認しておくのじゃぞ。

          # その他、ドキュメントに載っているオプションの入力じゃ（必要なら使うと良い）
          # username: GitHub Actions # 例: 通知時のユーザー名を設定
          # avatar-url: https://avatars.githubusercontent.com/u/44036562?s=200&v=4 # 例: アバター画像を設定
          # Embedsなど、もっと凝ったメッセージにしたい場合は、ドキュメントを見て設定するのじゃぞ。
